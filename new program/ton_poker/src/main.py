from telegram.ext import Application, CommandHandler, CallbackQueryHandler
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, MenuButtonWebApp, WebAppInfo
import logging

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

BOT_TOKEN = "7334592326:AAHO5o_sw6sPoqKkdK_WMJumj1dtyaIcv0A"

# –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä Telegram
WEB_APP_URL = "https://test-telegram-web-app.herokuapp.com"

class TonPokerBot:
    def __init__(self):
        self.app = Application.builder().token(BOT_TOKEN).build()
        self.register_handlers()
    
    def register_handlers(self):
        self.app.add_handler(CommandHandler("start", self.start_command))
        self.app.add_handler(CallbackQueryHandler(self.button_handler))
    
    async def start_command(self, update: Update, context):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
        await context.bot.set_chat_menu_button(
            chat_id=update.effective_chat.id,
            menu_button=MenuButtonWebApp(text="üéÆ –ò–≥—Ä–∞—Ç—å –≤ –ø–æ–∫–µ—Ä", web_app=WebAppInfo(url=WEB_APP_URL))
        )
        
        keyboard = [
            [
                InlineKeyboardButton("üí∞ –ë–∞–ª–∞–Ω—Å", callback_data="balance"),
                InlineKeyboardButton("üèÜ –¢—É—Ä–Ω–∏—Ä—ã", callback_data="tournaments")
            ],
            [
                InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TON Poker!\n"
            "üéÆ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É",
            reply_markup=reply_markup
        )
    
    async def button_handler(self, update: Update, context):
        query = update.callback_query
        await query.answer()
        
        if query.data == "balance":
            await query.edit_message_text(
                "üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: 0 TON",
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")
                ]])
            )
        elif query.data == "tournaments":
            await query.edit_message_text(
                "üèÜ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã:\n\n"
                "‚Ä¢ Sit & Go (6 max) - 5 TON\n"
                "‚Ä¢ Sit & Go (9 max) - 10 TON",
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")
                ]])
            )
        elif query.data == "help":
            await query.edit_message_text(
                "‚ÑπÔ∏è –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:\n\n"
                "1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é 'üéÆ –ò–≥—Ä–∞—Ç—å –≤ –ø–æ–∫–µ—Ä'\n"
                "2. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã\n"
                "3. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∏–≥—Ä–æ–π!\n\n"
                "üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç: 5 TON\n"
                "üèÜ –î–æ—Å—Ç—É–ø–Ω—ã —Ç—É—Ä–Ω–∏—Ä—ã Sit & Go",
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")
                ]])
            )
        elif query.data == "back_to_menu":
            await self.start_command(update, context)
    
    def run(self):
        print("Bot started! Press Ctrl+C to stop.")
        self.app.run_polling()

def main():
    bot = TonPokerBot()
    bot.run()

if __name__ == "__main__":
    main() 