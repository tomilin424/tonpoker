from telegram.ext import Application, CommandHandler, CallbackQueryHandler
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
import logging

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

BOT_TOKEN = "7334592326:AAHO5o_sw6sPoqKkdK_WMJumj1dtyaIcv0A"
WEB_APP_URL = "https://your-heroku-app.herokuapp.com"  # URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Heroku

class TonPokerBot:
    def __init__(self):
        self.app = Application.builder().token(BOT_TOKEN).build()
        self.register_handlers()
    
    def register_handlers(self):
        self.app.add_handler(CommandHandler("start", self.start_command))
        self.app.add_handler(CallbackQueryHandler(self.button_handler))
    
    async def start_command(self, update: Update, context):
        keyboard = [
            [
                InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", callback_data="play"),
                InlineKeyboardButton("üí∞ –ë–∞–ª–∞–Ω—Å", callback_data="balance")
            ],
            [
                InlineKeyboardButton("üèÜ –¢—É—Ä–Ω–∏—Ä—ã", callback_data="tournaments"),
                InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TON Poker!\n\n"
            "üéÆ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup
        )
    
    async def button_handler(self, update: Update, context):
        query = update.callback_query
        await query.answer()
        
        if query.data == "play":
            keyboard = [
                [InlineKeyboardButton("üî• Sit & Go (6 max)", callback_data="sng_6")],
                [InlineKeyboardButton("üåü Sit & Go (9 max)", callback_data="sng_9")],
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
            ]
            await query.edit_message_text(
                "üéÆ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã:",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )
        elif query.data == "balance":
            keyboard = [
                [
                    InlineKeyboardButton("üì• –î–µ–ø–æ–∑–∏—Ç", callback_data="deposit"),
                    InlineKeyboardButton("üì§ –í—ã–≤–æ–¥", callback_data="withdraw")
                ],
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
            ]
            await query.edit_message_text(
                "üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: 0 TON",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )
        elif query.data == "tournaments":
            keyboard = [
                [InlineKeyboardButton("üî• –†–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã", callback_data="regular")],
                [InlineKeyboardButton("üåü –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã", callback_data="special")],
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
            ]
            await query.edit_message_text(
                "üèÜ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã:\n\n"
                "‚Ä¢ Sit & Go (6 max) - 5 TON\n"
                "‚Ä¢ Sit & Go (9 max) - 10 TON\n"
                "‚Ä¢ Daily Tournament - 25 TON",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )
        elif query.data == "help":
            keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]]
            await query.edit_message_text(
                "‚ÑπÔ∏è –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:\n\n"
                "1. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å\n"
                "2. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã\n"
                "3. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å—Ç–æ–ª—É\n\n"
                "üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç: 5 TON\n"
                "üì§ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥: 10 TON\n\n"
                "üèÜ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã:\n"
                "‚Ä¢ Sit & Go (6 max)\n"
                "‚Ä¢ Sit & Go (9 max)\n"
                "‚Ä¢ Daily Tournament",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )
        elif query.data == "back_to_menu":
            await self.start_command(update, context)
    
    def run(self):
        print("Bot started! Press Ctrl+C to stop.")
        self.app.run_polling()

def main():
    bot = TonPokerBot()
    bot.run()

if __name__ == "__main__":
    main() 